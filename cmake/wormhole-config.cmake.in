@PACKAGE_INIT@

macro(import_targets type)
    if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/wormhole-${type}-targets.cmake")
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "wormhole ${type} libraries were requested but not found")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND OFF)
        return()
    endif()

    include("${CMAKE_CURRENT_LIST_DIR}/wormhole-${type}-targets.cmake")
endmacro()

if(NOT TARGET wormhole::libwormhole)
    set(_type "")

    if(DEFINED WORMHOLE_USE_SHARED_LIB)
        if(WORMHOLE_USE_SHARED_LIB)
            set(_type "shared")
        else()
            set(_type "static")
        endif()
    elseif(BUILD_SHARED_LIBS AND EXISTS "${CMAKE_CURRENT_LIST_DIR}/wormhole-shared-targets.cmake")
        set(_type "shared")
    elseif(EXISTS "${CMAKE_CURRENT_LIST_DIR}/wormhole-static-targets.cmake")
        set(_type "static")
    else()
        set(_type "shared")
    endif()

    import_targets(${_type})
    check_required_components(wormhole)

    include(CMakeFindDependencyMacro)
    find_dependency(Boost COMPONENTS system)
    find_dependency(tubus COMPONENTS libtubus)

    get_target_property(wormhole_INCLUDE_DIRS wormhole::libwormhole INTERFACE_INCLUDE_DIRECTORIES)
    set(wormhole_LIBRARY wormhole::libwormhole)

    set(wormhole_FOUND ON)
    unset(_type)
endif()
